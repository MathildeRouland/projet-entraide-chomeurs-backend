# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    acme_api.event.authentication_success_listener:
        class: App\EventListener\AuthSuccessListener
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccessResponse }
    
    App\Service\MemberDataService:
        arguments:
            $vulnerabilityRepository: '@App\Repository\VulnerabilityRepository'
            $difficultyRepository: '@App\Repository\DifficultyRepository'

    App\Service\SupportDataService:
        arguments:
            $placeRepository: '@App\Repository\PlaceRepository'
            $userRepository: '@App\Repository\UserRepository'
            $targetedAxisRepository: '@App\Repository\TargetedAxisRepository'
            $externalToolRepository: '@App\Repository\ExternalToolRepository'
    
    App\Service\JsonDecodeService:
        arguments:
            $serializer: '@Symfony\Component\Serializer\SerializerInterface'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
